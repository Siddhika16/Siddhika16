import java.util.Scanner;

abstract class Car {
    protected String type;

    public Car(String type) {
        this.type = type;
    }

    public abstract void build();

    protected void allocateAccessories() {
        System.out.println("Allocate Accessories for " + type);
    }

    protected void assembleBody() {
        System.out.println("Assembling Body for " + type);
    }

    protected void paint() {
        System.out.println("Painting " + type);
    }

    protected void installInterior() {
        System.out.println("Installing Interior for " + type);
    }
}

class Hatchback extends Car {
    public Hatchback() {
        super("Hatchback");
    }

    public void build() {
        allocateAccessories();
        assembleBody();
        paint();
        installInterior();
        System.out.println("Hatchback built successfully.\n");
    }
}

class Sedan extends Car {
    public Sedan() {
        super("Sedan");
    }

    public void build() {
        allocateAccessories();
        assembleBody();
        paint();
        installInterior();
        System.out.println("Sedan built successfully.\n");
    }
}

class SUV extends Car {
    public SUV() {
        super("SUV");
    }

    public void build() {
        allocateAccessories();
        assembleBody();
        paint();
        installInterior();
        System.out.println("SUV built successfully.\n");
    }
}

class CarFactory {
    public static Car createCar(String type) {
        switch (type.toLowerCase()) {
            case "hatchback":
                return new Hatchback();
            case "sedan":
                return new Sedan();
            case "suv":
                return new SUV();
            default:
                throw new IllegalArgumentException("Car type not recognized.");
        }
    }
}

public class TestFactoryPattern {
    public static void main(String[] args) {
        Scanner scr = new Scanner(System.in);
        int ch;
        String choice;

        do {
            System.out.println("Enter the car you want to build:");
            System.out.println("1: Hatchback \n2: Sedan \n3: SUV \n4: Exit");
            ch = scr.nextInt();

            switch (ch) {
                case 1:
                    Car hatchback = CarFactory.createCar("hatchback");
                    hatchback.build();
                    break;
                case 2:
                    Car sedan = CarFactory.createCar("sedan");
                    sedan.build();
                    break;
                case 3:
                    Car suv = CarFactory.createCar("suv");
                    suv.build();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    scr.close(); // Close the scanner before exiting
                    return;
                default:
                    System.out.println("Enter Correct Choice: ");
                    break;
            }
            System.out.println("Do you want to continue? (y/n) ");
            choice = scr.next();
        } while (choice.equalsIgnoreCase("y"));

        scr.close(); 
    }
}
